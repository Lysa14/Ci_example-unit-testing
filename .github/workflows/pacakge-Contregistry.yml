name: Publish Package to npmjs registry
on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test
jobs:
  create_release_artifacts:
    name: Create Release Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [aarch64, x86_64]
        ostype: [linux-gnu, linux-musl]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set environment variables
        run: |
          echo "ARCHITECTURE=${{ matrix.architecture }}" >> $GITHUB_ENV
          echo "OSTYPE=${{ matrix.ostype }}" >> $GITHUB_ENV
          echo "REGISTRY=ghcr.io"

      - name: Build and Package
        run: make build/package

      - name: Login to the Container registry
        if: ${{ needs.release.outputs.published == 'true' }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata
        if: ${{ needs.release.outputs.published == 'true' }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/kong/template-github-release
          sep-tags: ' '
          flavor: |
            suffix=-${{ matrix.architecture }}-${{ matrix.ostype }}
          tags: |
            type=sha
            type=ref,event=branch
            type=semver,pattern={{version}},value=${{ needs.release.outputs.release-git-tag }}
            type=semver,pattern={{major}},value=${{ needs.release.outputs.release-git-tag }}

      - name: Retag and Push
        if: ${{ needs.release.outputs.published == 'true' }}
        run: |
          for tag in ${{ steps.meta.outputs.tags }}; do \
              docker tag ghcr.io/template-github-release:build-${{ matrix.architecture }}-${{ matrix.ostype }} $tag && \
              docker push $tag; \
            done

      - name: Archive the package
        if: ${{ needs.release.outputs.published == 'true' }}
        run: |
          tar -C package -czvf ${{ matrix.architecture }}-${{ matrix.ostype }}.tar.gz .

      - name: Add Release Artifact to the GitHub Release
        if: ${{ needs.release.outputs.published == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.release.outputs.release-git-tag }}
          files: ${{ matrix.architecture }}-${{ matrix.ostype }}.tar.gz
